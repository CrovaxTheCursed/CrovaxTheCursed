from Crypto.Cipher import AES
from Crypto.Util.Padding import unpad
import base64


def get_key():
    return base64.b64decode(b"==AUyLZ7aRzyWlgazfkD/hZf"[::-1])

def decrypt_data(input_data):
    array = base64.b64decode(input_data)

    # Assuming the block size is 16 bytes (AES-128)
    block_size = AES.block_size
    array2 = array[:block_size]  # Extract the first block as the IV
    array3 = array[block_size:]  # Extract the remaining data as the ciphertext

    # The key parameter is obtained by reversing the string returned by get_key()
    key_parameter = get_key()

    cipher = AES.new(key_parameter, AES.MODE_CBC, array2)

    # Perform the decryption and remove padding
    plaintext = unpad(cipher.decrypt(array3), block_size)

    return plaintext


input_data = b"LJEPht7vYYQCuNzCY212oa6fX2ieCjrtv0eBcpk+HSteRXH4Tn40wdgcD3wlXIUjeWMbrr86+Nycf/tja7qC+A==" # replace with b64 encrypted strings

decrypted_text = decrypt_data(input_data)
print("Decrypted Text:", decrypted_text)
